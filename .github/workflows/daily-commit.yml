name: Daily Commit

on:
  schedule:
    - cron: '0 0 * * *' # Runs daily at midnight UTC
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  commit:
    runs-on: ubuntu-latest
    permissions:
      contents: write # This permission is necessary to allow the GITHUB_TOKEN to push changes.

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4 # Checks out your repository code into the runner environment.

      - name: Prepare Commit Details
        id: prepare_commit
        run: |
          FILE_NAME="last-commit.txt"
          COMMIT_MESSAGE_PREFIX="chore: daily automated commit"

          CURRENT_DATE_TIME=$(date '+%Y-%m-%d %H:%M:%S %Z')
          NEW_CONTENT="Last commit: ${CURRENT_DATE_TIME}"

          OLD_CONTENT=""
          if [ -f "${FILE_NAME}" ]; then
            OLD_CONTENT=$(cat "${FILE_NAME}")
          fi

          if [ "$NEW_CONTENT" != "$OLD_CONTENT" ]; then
            echo "${NEW_CONTENT}" > "${FILE_NAME}"
            echo "change_made=true" >> "$GITHUB_OUTPUT"
            echo "commit_message=\"${COMMIT_MESSAGE_PREFIX} on $(date '+%Y-%m-%d')\"" >> "$GITHUB_OUTPUT"
            echo "::notice::File '${FILE_NAME}' will be updated."
          else
            echo "change_made=false" >> "$GITHUB_OUTPUT"
            echo "::notice::No changes detected for '${FILE_NAME}'. Skipping commit."
          fi

      - name: Configure Git and Commit & Push changes
        if: steps.prepare_commit.outputs.change_made == 'true'
        env:
          # Define the commit message as an environment variable
          GIT_COMMIT_MESSAGE: ${{ steps.prepare_commit.outputs.commit_message }}
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

          git add last-commit.txt

          # Use the environment variable for the commit message, properly quoted
          git commit -m "$GIT_COMMIT_MESSAGE"

          # Explicitly use GITHUB_TOKEN for push
          git push https://x-access-token:${{ github.token }}@github.com/${{ github.repository }}
          echo "::notice::Successfully committed and pushed changes."
